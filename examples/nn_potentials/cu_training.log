potentials.py:52 INFO:
-------------------------------------------------------------------------------
                _______        _______ _     _ _______ _______
                |  |  | |      |       |_____| |______ |  |  |
                |  |  | |_____ |_____  |     | |______ |  |  |



MLChem is Machine Learning for Chemistry. This package is written in Python 3,
and intends to offer modern and rich features to perform machine learning
workflows for chemical physics.

This software is developed by Muammar El Khatib.
-------------------------------------------------------------------------------

potentials.py:53 INFO:Available backends: ['torch', 'torchvision', 'numpy'].
handler.py:34 WARNING:Data structure is not compatible with MLChem
handler.py:56 INFO:Preparing images...
handler.py:87 INFO:Images hashed and processed...
gaussian.py:111 INFO:Fingerprinting
gaussian.py:112 INFO:==============
gaussian.py:119 INFO:Getting unique element symbols for training
gaussian.py:126 INFO:Unique chemical elements: ['Cu']
gaussian.py:461 WARNING:Making default symmetry functions
gaussian.py:529 INFO:Number of features per chemical element:
gaussian.py:531 INFO:    - Cu: 8.
gaussian.py:533 INFO:Symmetry function parameters:
gaussian.py:534 INFO:-----------------------------
gaussian.py:536 INFO:  #      Symbol    Type Parameters
gaussian.py:557 INFO:  0   Cu            G2  eta: 0.0500
gaussian.py:557 INFO:  1   Cu            G2  eta: 0.2321
gaussian.py:557 INFO:  2   Cu            G2  eta: 1.0772
gaussian.py:557 INFO:  3   Cu            G2  eta: 5.0000
gaussian.py:557 INFO:  4   ['Cu', 'Cu']  G3  eta: 0.0050 gamma:  1.0000 zeta: 1.0000
gaussian.py:557 INFO:  5   ['Cu', 'Cu']  G3  eta: 0.0050 gamma: -1.0000 zeta: 1.0000
gaussian.py:557 INFO:  6   ['Cu', 'Cu']  G3  eta: 0.0050 gamma:  1.0000 zeta: 4.0000
gaussian.py:557 INFO:  7   ['Cu', 'Cu']  G3  eta: 0.0050 gamma: -1.0000 zeta: 4.0000
gaussian.py:174 INFO:Preprocessing data...
gaussian.py:217 INFO:Fingerprinting finished in 0 hours 0 minutes 7.69 seconds.
neuralnetwork.py:59 INFO:Model Training
neuralnetwork.py:60 INFO:==============
neuralnetwork.py:61 INFO:Model name: PytorchPotentials.
neuralnetwork.py:62 INFO:Number of hidden-layers: 2
neuralnetwork.py:65 INFO:Structure of Neural Net: (input, 10, 10, output)
neuralnetwork.py:128 INFO:ModuleDict(
  (Cu): Sequential(
    (0): Linear(in_features=8, out_features=10, bias=True)
    (1): ReLU()
    (2): Linear(in_features=10, out_features=10, bias=True)
    (3): ReLU()
    (4): Linear(in_features=10, out_features=1, bias=True)
  )
)
neuralnetwork.py:131 WARNING:Initialization of weights with Xavier Uniform by default.
neuralnetwork.py:236 INFO:Batch size: 10 elements per batch.
handler.py:56 INFO:Optimizer
handler.py:57 INFO:---------
handler.py:58 INFO:Name: Adam.
handler.py:59 INFO:Arguments:
handler.py:61 INFO:    - lr: 0.01.
handler.py:61 INFO:    - weight_decay: 0.0.
handler.py:63 INFO: 
neuralnetwork.py:267 INFO: 
neuralnetwork.py:268 INFO:Starting training...
neuralnetwork.py:269 INFO: 
neuralnetwork.py:276 INFO:Epoch  Time Stamp          Loss         RMSE/img RMSE/atom
neuralnetwork.py:282 INFO:------ ------------------- ------------ -------- ---------
neuralnetwork.py:346 INFO:     1 2019-04-09 13:18:57 2.451501e-03 0.088571 0.022143
neuralnetwork.py:346 INFO:     2 2019-04-09 13:18:57 1.438404e-03 0.067845 0.016961
neuralnetwork.py:346 INFO:     3 2019-04-09 13:18:57 1.495560e-03 0.069179 0.017295
neuralnetwork.py:346 INFO:     4 2019-04-09 13:18:57 1.289717e-03 0.064242 0.016061
neuralnetwork.py:346 INFO:     5 2019-04-09 13:18:57 7.262593e-04 0.048208 0.012052
neuralnetwork.py:346 INFO:     6 2019-04-09 13:18:58 2.300754e-04 0.027134 0.006783
neuralnetwork.py:346 INFO:     7 2019-04-09 13:18:58 1.576613e-04 0.022461 0.005615
neuralnetwork.py:346 INFO:     8 2019-04-09 13:18:58 3.628328e-04 0.034074 0.008519
neuralnetwork.py:346 INFO:     9 2019-04-09 13:18:58 3.324122e-04 0.032615 0.008154
neuralnetwork.py:346 INFO:    10 2019-04-09 13:18:58 2.277879e-04 0.026999 0.006750
neuralnetwork.py:346 INFO:    11 2019-04-09 13:18:58 2.933495e-04 0.030639 0.007660
neuralnetwork.py:346 INFO:    12 2019-04-09 13:18:58 3.866907e-04 0.035177 0.008794
neuralnetwork.py:346 INFO:    13 2019-04-09 13:18:58 3.314764e-04 0.032569 0.008142
neuralnetwork.py:346 INFO:    14 2019-04-09 13:18:58 1.646982e-04 0.022957 0.005739
neuralnetwork.py:346 INFO:    15 2019-04-09 13:18:58 3.383055e-05 0.010405 0.002601
neuralnetwork.py:346 INFO:    16 2019-04-09 13:18:58 2.748733e-05 0.009379 0.002345
neuralnetwork.py:346 INFO:    17 2019-04-09 13:18:58 1.034605e-04 0.018195 0.004549
neuralnetwork.py:346 INFO:    18 2019-04-09 13:18:58 1.525916e-04 0.022097 0.005524
neuralnetwork.py:346 INFO:    19 2019-04-09 13:18:59 1.354230e-04 0.020817 0.005204
neuralnetwork.py:346 INFO:    20 2019-04-09 13:18:59 9.922971e-05 0.017820 0.004455
neuralnetwork.py:346 INFO:    21 2019-04-09 13:18:59 9.502634e-05 0.017438 0.004360
neuralnetwork.py:346 INFO:    22 2019-04-09 13:18:59 1.189333e-04 0.019509 0.004877
neuralnetwork.py:346 INFO:    23 2019-04-09 13:18:59 1.298171e-04 0.020382 0.005095
neuralnetwork.py:346 INFO:    24 2019-04-09 13:18:59 1.009537e-04 0.017974 0.004493
neuralnetwork.py:346 INFO:    25 2019-04-09 13:18:59 4.870351e-05 0.012484 0.003121
neuralnetwork.py:346 INFO:    26 2019-04-09 13:18:59 1.476730e-05 0.006874 0.001719
neuralnetwork.py:346 INFO:    27 2019-04-09 13:18:59 2.150182e-05 0.008295 0.002074
neuralnetwork.py:346 INFO:    28 2019-04-09 13:18:59 4.609081e-05 0.012145 0.003036
neuralnetwork.py:346 INFO:    29 2019-04-09 13:18:59 5.093200e-05 0.012766 0.003192
neuralnetwork.py:346 INFO:    30 2019-04-09 13:18:59 3.529045e-05 0.010627 0.002657
neuralnetwork.py:346 INFO:    31 2019-04-09 13:18:59 2.888874e-05 0.009615 0.002404
neuralnetwork.py:346 INFO:    32 2019-04-09 13:19:00 4.162155e-05 0.011541 0.002885
neuralnetwork.py:346 INFO:    33 2019-04-09 13:19:00 5.148572e-05 0.012836 0.003209
neuralnetwork.py:346 INFO:    34 2019-04-09 13:19:00 3.986786e-05 0.011295 0.002824
neuralnetwork.py:346 INFO:    35 2019-04-09 13:19:00 1.775756e-05 0.007538 0.001885
neuralnetwork.py:346 INFO:    36 2019-04-09 13:19:00 7.899229e-06 0.005028 0.001257
neuralnetwork.py:346 INFO:    37 2019-04-09 13:19:00 1.455320e-05 0.006824 0.001706
neuralnetwork.py:346 INFO:    38 2019-04-09 13:19:00 2.231439e-05 0.008450 0.002113
neuralnetwork.py:346 INFO:    39 2019-04-09 13:19:00 1.991899e-05 0.007984 0.001996
neuralnetwork.py:346 INFO:    40 2019-04-09 13:19:00 1.396129e-05 0.006684 0.001671
neuralnetwork.py:346 INFO:    41 2019-04-09 13:19:00 1.494021e-05 0.006914 0.001729
neuralnetwork.py:346 INFO:    42 2019-04-09 13:19:00 2.113555e-05 0.008224 0.002056
neuralnetwork.py:346 INFO:    43 2019-04-09 13:19:00 2.260367e-05 0.008505 0.002126
neuralnetwork.py:346 INFO:    44 2019-04-09 13:19:00 1.590964e-05 0.007135 0.001784
neuralnetwork.py:346 INFO:    45 2019-04-09 13:19:01 8.420257e-06 0.005191 0.001298
neuralnetwork.py:346 INFO:    46 2019-04-09 13:19:01 7.495478e-06 0.004898 0.001224
neuralnetwork.py:358 INFO:Training finished in 0 hours 0 minutes 3.56 seconds.
